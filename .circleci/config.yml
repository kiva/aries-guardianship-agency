version: 2.1

jobs:
  build-and-test:
    executor:
      name: node/default
      tag: '14.15.1'
    steps:
      - checkout
      - run: npm install
      - run: npm run build
      - run: npm run lint

  integration-test:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: setup shell environment
          command: |
            ./scripts/setup_env.sh
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: node npm setup
          command: |
              npm install
              nvm install v14.15.1
              node -v
              nvm alias default v14.15.1
      - run:
          name: setup docker environments
          command: |
            docker pull bcgovimages/aries-cloudagent:py36-1.15-1_0.6.0
      - run:
          name: Start docker compose and wait for readiness
          command: |
            docker network ls
            docker-compose -f docker-compose.ci.yml build --no-cache
            set -x
            docker-compose -f docker-compose.ci.yml up --force-recreate -d
            sleep 20
            docker-compose -f docker-compose.ci.yml logs
      - run:
          name: Is Agency Reachable?
          command: |
            ./scripts/healthcheck.sh http://localhost:3010/healthz
      - run:
          name: run tests
          command: |
            if ! npm run test ; then
              echo "Tests failed. Server logs:";
              cd ..
              docker-compose -f docker-compose.ci.yml logs;
              exit 1;
            fi

  protocol-integration-tests:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: Pull protocol-integration-tests
          command: git clone https://github.com/kiva/protocol-integration-tests ./
      - run:
          name: Setup environment
          command: |
            ./scripts/setup_env.sh
            echo $AUTH0_ENV | base64 --decode >> .env
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Node npm setup
          command: |
            nvm install v14.15.1
            node -v
            nvm alias default v14.15.1
      - run:
          name: Get ACAPy
          command: docker pull bcgovimages/aries-cloudagent:py36-1.15-1_0.6.0
      - run:
          name: Override for aries-guardianship-agency image
          command: ./scripts/setup_override.sh -r aries-guardianship-agency -e scripts/useDummyEnv.sh
      - run:
          name: Start docker compose and wait for readiness
          command: |
            docker system prune -f
            docker volume prune -f
            docker-compose build --no-cache
            docker-compose up --force-recreate -d
            sleep 20
            docker-compose logs
      - run:
          name: Healthcheck services
          command: ./scripts/healthstack.sh
      - run:
          name: Setup integration tests
          command: |
            npm install
            ./scripts/setup_fixtures.sh
      - run:
          name: Running integration tests
          command: |
            if ! npm run test ; then
              echo "Tests failed. Server logs:";
              docker-compose logs;
              exit 1;
            fi

workflows:
  build-test-deploy:
    jobs:
      - build-and-test:
          filters: # run for all branches AND tags
            tags:
              only: /.*/
      - integration-test:
          requires:
            - build-and-test
          filters: # run for all branches AND tags
            tags:
              only: /.*/
      - protocol-integration-tests:
          context:
            - integration-test-context
          requires:
            - build-and-test
          filters: # only run for semver tagged versions
            tags:
              only: /.*/
      - docker/publish:
          requires:
            - integration-test
            - integration-test-context
          filters: # only run for semver tagged versions
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)/
            branches:
              ignore: /.*/
          update-description: true
          dockerfile: ./docker/Dockerfile.production
          image: kivaprotocol/aries-guardianship-agency
          tag: << pipeline.git.tag >>,latest

orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.3.0
